- name: include OS-specific variables
  include_vars: "{{ ansible_os_family }}.yml"
  
- include: "{{ ansible_os_family }}.yml"
  become: yes

- name: Copy nginx configuration for wordpress
  template: src={{ansible_os_family}}/default.conf dest={{nginx_path}}
  notify: restart nginx
  tags: nginx

- name: Disable default pool
  command: mv {{php_fpm_path}}/www.conf {{php_fpm_path}}/www.disabled creates={{php_fpm_path}}/www.disabled
  notify: restart php-fpm
  tags: php-fpm
 
- name: Copy php-fpm configuration
  template: src={{ansible_os_family}}/wordpress.conf dest={{php_fpm_path}}/
  notify: restart php-fpm
  tags: php-fpm

- name: Download WordPress
  get_url: 
    url: http://wordpress.org/wordpress-{{ wp_version }}.tar.gz 
    dest: /srv/wordpress-{{ wp_version }}.tar.gz
    sha256sum: "{{ wp_sha256sum }}"
  tags: wordpress

- name: Extract archive
  command: chdir=/srv/ /bin/tar xvf wordpress-{{ wp_version }}.tar.gz creates=/srv/wordpress
  tags: wordpress

- name: Add group "wordpress"
  group: name=wordpress
  tags: wordpress

- name: Add user "wordpress"
  user: name=wordpress group=wordpress home=/srv/wordpress/
  tags: wordpress

- name: add wordpress user ssh/sftp key
  authorized_key: user=wordpress key={{wp_user_ssh_key}}
  when: wp_user_ssh_key is defined
  tags: wordpress

- name: Fetch random salts for WordPress config
  local_action: command curl https://api.wordpress.org/secret-key/1.1/salt/
  register: "wp_salt"
  become: no
  tags: wordpress

- name: Create WordPress database
  mysql_db: name={{ wp_db_name }} state=present
  tags: wordpress

- name: Create WordPress database user
  mysql_user: name={{ wp_db_user }} password={{ wp_db_password }} priv={{ wp_db_name }}.*:ALL host='localhost' state=present
  tags: wordpress

- name: Copy WordPress config file
  template: src=wp-config.php dest=/srv/wordpress/
  tags: wordpress

- name: Change ownership of WordPress installation
  file: path=/srv/wordpress/ owner=wordpress group=wordpress state=directory recurse=yes
  tags: wordpress

- include: "SELinux.yml"
  when: ansible_selinux is defined and ansible_selinux.status == "enabled"
  tags: selinux

- include: "ssl.yml"
  when: wp_ssl_cert is defined and wp_ssl_key is defined and wp_ssl_path is defined
  tags: ssl

- name: Start php-fpm Service
  service: name={{php_fpm_service_name}} state=started enabled=yes
  tags: php-fpm